@model OrderHandler.UI.Models.OrderViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create Order</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CustomerName" class="control-label"></label>
                <input asp-for="CustomerName" class="form-control" />
                <span asp-validation-for="CustomerName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <tbody>
        @if(Model.OrderRow.Count > 0){
            @foreach (var item in Model.OrderRow)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderRowNr)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerName)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.OrderRowNr }) |
                        @Html.ActionLink("Details", "Details", new { id = item.OrderRowNr }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.OrderRowNr })
                    </td>
                </tr>
            }
        }
    </tbody>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
